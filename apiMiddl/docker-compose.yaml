version: '3'
services:
  minio:
    image: minio/minio:latest
    volumes:
      - ./.persistant/minio:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: Aa123456
    entrypoint: sh
    command: -c 'mkdir -p /data && cd /data && mkdir -p dagster-test datasets assets reports && minio server /data'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  hub:
    network_mode: "host"
    build:
      context: .
      dockerfile: jupyterhub/Dockerfile.hub
    restart: always
    environment:
      - ANALYTICS_APP_ENV
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jupyterhub/data:/srv/jupyterhub

  ml_studio:
    image: ml_studio
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      - AP_MINIO_URL=minio:9000
      - AP_ML_INTERFACE=0.0.0.0
      - AP_ML_PORT=5000
      - AP_MINIO_ACCESS_KEY=minio
      - AP_MINIO_SECRET_KEY=Aa123456
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=Aa123456
      - DAGSTER_HOME=/app/.dagster_home
      - AP_PG_USER=postgres
      - AP_PG_PASS=Aa123456
      - AP_PG_HOST=postgres
    depends_on:
      - minio
      - postgres
  postgres:
    image: "postgres:latest"
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Aa123456
      - POSTGRES_DB=public
    volumes:
      - .postgres_init:/docker-entrypoint-initdb.d
      - /docker/ml_postgres/db:/var/lib/postgresql/data
