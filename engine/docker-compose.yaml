version: '3'
services:
  ml_studio:
    image: ml_studio
    container_name: newml
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      - AP_MINIO_URL=localhost:9000
      - AP_ML_INTERFACE=0.0.0.0
      - AP_ML_PORT=5000
      - AP_MINIO_ACCESS_KEY=minio
      - AP_MINIO_SECRET_KEY=xxxxxxxx
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=xxxxxxxx
      - DAGSTER_HOME=/app/.dagster_home
      - AP_PG_USER=postgres
      - AP_PG_PASS=xxxxxxxx
      - AP_PG_HOST=localhost
        #depends_on:
        #- minio
        #- postgres
  minio:
    image: minio/minio
    volumes:
      - ./.persistant/minio:/data
    ports:
      - "0.0.0.0:9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: xxxxxxxx
    entrypoint: sh
    command: -c 'mkdir -p /data && cd /data && mkdir -p dagster-test datasets assets reports && minio server /data'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    container_name: postgres
    image: "postgres:latest"
    restart: always
    ports:
      - '0.0.0.0:5432:5432'
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=xxxxxxxx
      - POSTGRES_DB=analyticsdb
    volumes:
      - .postgres_init:/docker-entrypoint-initdb.d
      - /docker/ml_postgres/db:/var/lib/postgresql/data
